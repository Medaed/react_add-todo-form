{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getTodoId","Math","max","initialTodos","userId","usersFromServer","find","App","useState","setTodos","setTitle","setUserId","hasNoTitleError","setHasNoTitleError","hasNoUserIdError","setHasNoUserIdError","action","method","onSubmit","event","preventDefault","hasNoError","trim","newTodo","type","value","pattern","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddcd9e88.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <TodoInfo todo={todo} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasNoTitleError, setHasNoTitleError] = useState(true);\n  const [hasNoUserIdError, setHasNoUserIdError] = useState(true);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasNoTitleError(true);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasNoUserIdError(true);\n  };\n\n  const addTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    let hasNoError = true;\n\n    if (!title.trim()) {\n      setHasNoTitleError(false);\n      hasNoError = false;\n    }\n\n    if (userId === 0) {\n      setHasNoUserIdError(false);\n      hasNoError = false;\n    }\n\n    if (!hasNoError) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getTodoId(todos),\n      title,\n      completed: false,\n      userId,\n      user: usersFromServer.find(user => user.id === userId),\n    };\n\n    setTodos([...todos, newTodo]);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            pattern=\"^[a-zA-Z0-9\\sА-Яа-яіІєЄїЇґҐ  ]*$\"\n            placeholder=\"Please enter a title\"\n            onChange={handleTitleChange}\n          />\n          {!hasNoTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                value={id}\n                key={name}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {!hasNoUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}